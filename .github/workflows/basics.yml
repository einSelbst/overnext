name: Continuous integration

on:
  pull_request:
    branches:
      - main
      - pure
  repository_dispatch:
    types:
      - ci-checks

jobs:
  setup:
    name: Install Dependencies
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - name: Checkout Repo
        uses: actions/checkout@main
        with:
          ref: ${{ github.event.client_payload.ref }}

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@main
        with:
          node-version: ${{ matrix.node-version }}
          check-latest: true

      - name: Cache some stuff
        id: cache-pnpm-dir
        uses: actions/cache@main
        env:
          cache-name: cache-pnpm-store
        with:
          path: |
            ~/.pnpm-store
            ${{ github.workspace }}/node_modules
            ${{ github.workspace }}/.next/cache
            ~/.cache/Cypress
          key: |
            ${{ runner.os }}-${{ matrix.node-version }}-build-${{ env.cache-name }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-${{ matrix.node-version }}-build-

      - name: Install pnpm
        uses: pnpm/action-setup@master
        with:
          version: next

      - name: Install dependencies
        if: steps.cache-pnpm-dir.outputs.cache-hit != 'true'
        run: |
          pnpm --version
          pnpm install --prefer-frozen-lockfile

  # works without built
  lint:
    needs: setup
    name: Validate Source
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@main
        with:
          ref: ${{ github.event.client_payload.ref }}

      - name: Cache some stuff
        id: cache-pnpm-dir
        uses: actions/cache@main
        env:
          cache-name: cache-pnpm-store
        with:
          path: |
            ~/.pnpm-store
            ${{ github.workspace }}/node_modules
            ${{ github.workspace }}/.next/cache
            ~/.cache/Cypress
          key: |
            ${{ runner.os }}-${{ matrix.node-version }}-build-${{ env.cache-name }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-${{ matrix.node-version }}-build-

      - name: Install pnpm
        uses: pnpm/action-setup@master
        with:
          version: next

      - name: Run prettier
        run: pnpm format

      - name: Run eslint
        run: pnpm lint

      - name: Run type-check
        run: pnpm type-check

      - name: Run Jest
        run: pnpm test:jest

      # TODO: would be better to run this once a day or so
      - name: Run audit
        run: pnpm audit

  test:
    needs: setup
    name: Validate Application
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@main
        with:
          ref: ${{ github.event.client_payload.ref }}

      - name: Restore Dependencies from Cache
        id: cache-pnpm-dir
        uses: actions/cache@main
        env:
          cache-name: cache-pnpm-store
        with:
          path: |
            ~/.pnpm-store
            ${{ github.workspace }}/node_modules
            ${{ github.workspace }}/.next/cache
            ~/.cache/Cypress
          key: |
            ${{ runner.os }}-${{ matrix.node-version }}-build-${{ env.cache-name }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-${{ matrix.node-version }}-build-

      - name: Install pnpm
        uses: pnpm/action-setup@master
        with:
          version: next

      - name: 'Run tests'
        # run: pnpm test:ci
        run: pnpm e2e
        env:
          CI: true
          APP_ENV: test

      - name: Report Test Coverage
        uses: romeovs/lcov-reporter-action@v0.2.21
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          lcov-file: ./coverage/lcov.info

      - name: Print dir
        run: |
          cd ./.next
          ls -la
          cd ./static
          ls -la
          cd ./css
          ls -la

      - name: Project Wallace Diff
        if: false
        uses: projectwallace/css-diff-action@master
        with:
          project-wallace-token: ${{ secrets.PROJECT_WALLACE_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          css-path: ./.next/static/css/202c2f7e1742e4bfd4b4.css

      - name: Project Wallace Diff
        # uses: einSelbst/css-diff-action@master2
        uses: einSelbst/css-diff-action@einSelbst-patch-2
        with:
          project-wallace-token: ${{ secrets.PROJECT_WALLACE_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          css-path: ./.next/static/css/unusedfile.css
