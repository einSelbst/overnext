name: Continuous integration

on:
  issue_comment:
    types: [edited]
  pull_request:
    types: [synchronize, ready_for_review]

jobs:
  # @see https://github.com/marketplace/actions/skip-duplicate-actions
  pre_job:
    # continue-on-error: true # Uncomment once integration is finished
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@master
        with:
          # All of these options are optional, so you can remove them if you are happy with the defaults
          concurrent_skipping: 'never' # is the default [never, same_content, outdated_runs, always]
          skip_after_successful_duplicate: 'true' # is the default [true, false]
          cancel_others: true # default false
          # paths_ignore: '["**/README.md", "**/docs/**"]'
          # paths: '[]'
          # do_not_skip: '["pull_request", "workflow_dispatch", "schedule"]' # default ["workflow_dispatch", "schedule"]

  Source-Checks:
    name: Validate Source Code
    needs: pre_job
    if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - name: Checkout Repo
        uses: actions/checkout@main
        with:
          ref: ${{ github.event.client_payload.ref }}

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@main
        with:
          node-version: ${{ matrix.node-version }}
          check-latest: true

      - name: Cache some stuff
        id: cache-pnpm-dir
        uses: actions/cache@main
        env:
          cache-name: cache-pnpm-store
        with:
          path: |
            ~/.pnpm-store
            ${{ github.workspace }}/node_modules
            ${{ github.workspace }}/.next/cache
            ~/.cache/Cypress
          key: |
            ${{ runner.os }}-${{ matrix.node-version }}-build-${{ env.cache-name }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-${{ matrix.node-version }}-build-

      - name: Install pnpm
        uses: pnpm/action-setup@master
        with:
          version: next

      - name: Install dependencies
        if: steps.cache-pnpm-dir.outputs.cache-hit != 'true'
        run: |
          pnpm --version
          pnpm install --prefer-frozen-lockfile

      - name: Run prettier
        run: pnpm format

      - name: Run eslint
        run: pnpm lint

      - name: Run type-check
        run: pnpm type-check

      # TODO: would be better to run this once a day or so
      - name: Run audit
        run: pnpm audit

  Build-Checks:
    name: Validate App Code
    needs: pre_job
    if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - name: Checkout Repo
        uses: actions/checkout@main
        with:
          ref: ${{ github.event.client_payload.ref }}

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@main
        with:
          node-version: ${{ matrix.node-version }}
          check-latest: true

      - name: Cache some stuff
        id: cache-pnpm-dir
        uses: actions/cache@main
        env:
          cache-name: cache-pnpm-store
        with:
          path: |
            ~/.pnpm-store
            ${{ github.workspace }}/node_modules
            ${{ github.workspace }}/.next/cache
            ~/.cache/Cypress
          key: |
            ${{ runner.os }}-${{ matrix.node-version }}-build-${{ env.cache-name }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-${{ matrix.node-version }}-build-

      - name: Install pnpm
        uses: pnpm/action-setup@master
        with:
          version: next

      - name: Install dependencies
        if: steps.cache-pnpm-dir.outputs.cache-hit != 'true'
        run: |
          pnpm --version
          pnpm install --prefer-frozen-lockfile

      - name: 'Run tests'
        run: pnpm test
        env:
          CI: true

      - name: Report Test Coverage
        uses: romeovs/lcov-reporter-action@v0.2.21
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          lcov-file: ./coverage/lcov.info
