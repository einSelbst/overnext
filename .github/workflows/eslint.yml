name: ESLint

on:
  # By adding a schedule task to this workflow we will automatically
  # begin serializing read-only runs and handling them. The cron job
  # below is set to run every 15 minutes, GitHub will ignore anything
  # under 10 minutes and run every 10 minutes anyway.
  # schedule:
  # - cron: '*/15 * * * *'
  # dispatch triggered actions don't run in the context of the PR unfortunately
  # repository_dispatch:
  #   types: [new-pull-request]
  pull_request:
    types: [opened, synchronize, ready_for_review, review_requested]
  issue_comment:
    types: [edited]

jobs:
  # @see https://github.com/marketplace/actions/skip-duplicate-actions
  pre_job:
    continue-on-error: true # Uncomment once integration is finished
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@master
        with:
          # All of these options are optional, so you can remove them if you are happy with the defaults
          concurrent_skipping: 'never' # is the default [never, same_content, outdated_runs, always]
          skip_after_successful_duplicate: 'true' # is the default [true, false]
          cancel_others: true # default false
          # paths_ignore: '["**/README.md", "**/docs/**"]'
          # paths: '[]'
          # do_not_skip: '["pull_request", "workflow_dispatch", "schedule"]' # default ["workflow_dispatch", "schedule"]

  eslint:
    name: Run ESLint
    needs: pre_job
    if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - name: Checkout Repo
        uses: actions/checkout@main
        with:
          ref: ${{ github.event.client_payload.ref }}

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@main
        with:
          node-version: ${{ matrix.node-version }}
          check-latest: true

      - name: Cache ~/.pnpm-store
        id: cache-pnpm-dir
        uses: actions/cache@main
        env:
          cache-name: cache-pnpm-store
        with:
          path: |
            ~/.pnpm-store
            ${{ github.workspace }}/node_modules
          key: ${{ runner.os }}-${{ matrix.node-version }}-build-${{ env.cache-name }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-${{ matrix.node-version }}-build-
            ${{ runner.os }}-

      - name: Install pnpm
        if: steps.cache-pnpm-dir.outputs.cache-hit != 'true'
        run: |
          npm i pnpm@next -g
          pnpm --version

      - name: Install dependencies
        if: steps.cache-pnpm-dir.outputs.cache-hit != 'true'
        run: pnpm install --prefer-frozen-lockfile

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Run Eslint
        uses: bradennapier/eslint-plus-action@v3.4.2
        with:
          reportIgnoredFiles: true
          issueSummaryType: full
