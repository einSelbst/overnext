---
root: true
parserOptions:
  sourceType: module
  ecmaVersion: 2021
  ecmaFeatures:
    modules: true,
    impliedStrict: true,
    jsx: true
reportUnusedDisableDirectives: true
plugins:
  - react
  - import
  - unicorn
# - jsx-a11y
extends:
  - eslint:all
  - plugin:import/recommended
  - plugin:unicorn/recommended
  - plugin:compat/recommended
  - plugin:jsx-a11y/strict
  - plugin:react/all
  - plugin:react-hooks/recommended
  # - plugin:@next/next/recommended
  - prettier
  # - next
  # - next/core-web-vitals
env:
  es6: true
  browser: true
  node: true
settings:
  react:
    version: detect
  import/resolver:
    node:
      extensions:
        - '.js'
        - '.jsx'
  # for eslint-plugin-compat, @see https://github.com/amilajack/eslint-plugin-compat#adding-polyfills
  polyfills:
    - Promise
    - fetch
rules:
  # config for core eslint rules
  no-warning-comments: off
  no-inline-comments: off
  spaced-comment: off
  capitalized-comments: off
  line-comment-position: off
  no-magic-numbers:
    - warn
    - ignoreArrayIndexes: true
      ignoreDefaultValues: true
      detectObjects: true
      enforceConst: false
  no-underscore-dangle: off
  no-ternary: off
  one-var: off
  no-unused-vars:
    - error
    - argsIgnorePattern: '^_'
      varsIgnorePattern: '^_'
  no-console:
    - warn
    - allow:
        - warn
        - error

  # I want to re-enable those
  sort-keys: off
  sort-vars: off
  sort-imports: off
  max-statements: off
  no-undefined: off
  id-length: off
  func-style: off
  max-lines-per-function:
    - warn
    - max: 120
      skipComments: true
      skipBlankLines: true

  # config for react linter rules
  react/react-in-jsx-scope: off
  react/jsx-filename-extension:
    - error
    - extensions:
        - '.jsx'
        - '.tsx'
  react/jsx-no-literals: off
  react/jsx-max-depth: off
  react/jsx-sort-props: error
  react/require-default-props: off
  react/function-component-definition:
    - error
    - namedComponents: 'arrow-function'
      unnamedComponents: 'arrow-function'

  # I want to re-enable those
  react/no-multi-comp: off
  react/forbid-component-props: off

  # enable some non-recommended unicorn rules
  unicorn/string-content: error
  unicorn/import-index: error
  # configure some unicorn rules
  unicorn/expiring-todo-comments:
    - warn
    - allowWarningComments: false
      ignoreDatesOnPullRequests: true
  unicorn/filename-case:
    - error
    - case: kebabCase
      ignore:
        - '^__coverage__.ts$'
  unicorn/prefer-module:
    - off # ToDo: figure out how to fix this
  unicorn/prefer-node-protocol:
    - off # ToDo: enable when import/no-unresolved properly supports this
  unicorn/prevent-abbreviations:
    - error
    - checkProperties: true
      replacements:
        props:
          properties: false
      allowList:
        dest: true
        env: true
        i18n: true
        params: true
        src: true

  # configure import plugin
  import/dynamic-import-chunkname: error
  import/exports-last: error
  import/extensions: error
  import/first: error
  import/group-exports: error
  import/max-dependencies:
    - error
    - max: 11
  import/newline-after-import: error
  import/no-absolute-path: error
  import/no-amd: error
  import/no-anonymous-default-export: error
  import/no-commonjs: off
  import/no-cycle: warn
  import/no-default-export: off
  import/no-deprecated: error
  import/no-dynamic-require: error
  import/no-extraneous-dependencies: error
  import/no-import-module-exports: error
  import/no-internal-modules: off
  import/no-mutable-exports: error
  import/no-named-default: error
  import/no-named-export: off
  import/no-namespace: error
  import/no-nodejs-modules:
    - error
    - allow: [querystring]
  import/no-relative-packages: error
  import/no-relative-parent-imports: off
  import/no-restricted-paths: error
  import/no-self-import: error
  import/no-unassigned-import: error
  import/no-unused-modules: error
  import/no-useless-path-segments: error
  import/no-webpack-loader-syntax: error
  import/order:
    - error
    - newlines-between: always
      warnOnUnassignedImports: true
      alphabetize:
        order: asc # sort in ascending order. Options: ['ignore', 'asc', 'desc']
        caseInsensitive: true # ignore case. Options: [true, false]
  import/prefer-default-export: warn
  import/unambiguous: off

  # the default rule gets messed up with nextjs' ways of doing links
  jsx-a11y/anchor-is-valid:
    - error
    - components:
        - Link
      specialLink:
        - hrefLeft
        - hrefRight
      aspects:
        - invalidHref
        - preferButton
overrides:
  # Config for Typescript Linting
  - files:
      - src/**/*.ts
      - src/**/*.tsx
    parser: '@typescript-eslint/parser'
    parserOptions:
      project:
        - tsconfig.json
        - cypress/tsconfig.json
      tsconfigRootDir: '.'
      warnOnUnsupportedTypeScriptVersion: true,
    plugins:
      # - react
      - '@typescript-eslint'
      # - import
      # - eslint-plugin-tsdoc
      # - jsx-a11y
    extends:
      - plugin:import/recommended
      - plugin:import/typescript
      - plugin:@typescript-eslint/recommended
      # - plugin:@typescript-eslint/all
      - plugin:@typescript-eslint/recommended-requiring-type-checking
      - prettier
    settings:
      import/parsers:
        '@typescript-eslint/parser':
          - '.ts'
          - '.tsx'
      import/resolver:
        typescript:
          - alwaysTryTypes: true
            project: tsconfig.json
        node:
          extensions:
            - '.ts'
            - '.tsx'
    rules:
      '@typescript-eslint/no-namespace': [2, { 'allowDeclarations': true }]
      '@typescript-eslint/explicit-module-boundary-types': off
      no-use-before-define: off
      '@typescript-eslint/no-use-before-define': error
      '@typescript-eslint/no-var-requires': off
      '@typescript-eslint/no-unused-vars':
        - error
        - argsIgnorePattern: '^_'
          varsIgnorePattern: '^_'
  #     tsdoc/syntax: warn
  # # Config for Cypress Linting
  - files:
      - cypress/**/*.js
      - '**/*.spec.js'
    plugins:
      - cypress
    extends:
      - plugin:cypress/recommended
    rules:
      no-console: off
      no-unused-expressions: off
      no-magic-numbers: off
      multiline-comment-style: off
      max-lines-per-function: off
      max-statements: off
      max-lines: off
      id-length: off
      cypress/no-unnecessary-waiting: off
      # '@typescript-eslint/no-empty-function': 'off'
      # '@typescript-eslint/ban-ts-comment': 'off'
      unicorn/consistent-function-scoping:
        - error
        - checkArrowFunctions: false
      # try to enable the following rules at some point in the future
      require-unicode-regexp: off
      prefer-destructuring: off
      no-invalid-this: off
      func-names: off
      no-empty-function: off
      import/no-unassigned-import: off
  # Config for jest Linting
  - files:
      - '**/*.test.[js|ts]'
    # extends:
    # - plugin:jest/all
    # - plugin:jest-dom/recommended
    env:
      jest: true
