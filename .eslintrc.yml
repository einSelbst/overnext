---
root: true
parserOptions:
  ecmaVersion: 2021
  ecmaFeatures:
    jsx: true
reportUnusedDisableDirectives: true
plugins:
  - react
# - import
# - unicorn
# - jsx-a11y
extends:
  - eslint:all
  # - eslint:recommended
  # - plugin:import/errors
  # - plugin:import/warnings
  # - plugin:unicorn/recommended
  # - plugin:compat/recommended
  # - plugin:jsx-a11y/strict
  - plugin:react/recommended
  # - plugin:react/all
  # - plugin:react-hooks/recommended
  # - plugin:@next/next/recommended
  # - plugin:prettier/recommended
  - prettier
env:
  es6: true
  browser: true
  node: true
settings:
  react:
    version: detect
  import/resolver:
    node:
      extensions:
        - '.js'
        - '.jsx'
  # for eslint-plugin-compat, @see https://github.com/amilajack/eslint-plugin-compat#adding-polyfills
  polyfills:
    - Promise
rules:
  react/react-in-jsx-scope: 'off'
  # import/order:
  #   - error
  #   - alphabetize:
  #       order: asc # sort in ascending order. Options: ['ignore', 'asc', 'desc']
  #       caseInsensitive: true # ignore case. Options: [true, false]
  # unicorn/consistent-function-scoping:
  #   - error
  #   - checkArrowFunctions: false
  # unicorn/expiring-todo-comments:
  #   - warn
  #   - allowWarningComments: false
  #     ignoreDatesOnPullRequests: true
  # unicorn/filename-case:
  #   - error
  #   - case: kebabCase
  #     ignore:
  #       - '^__coverage__.ts$'
  # unicorn/prefer-module:
  #   - off # ToDo: figure out how to fix this
  # # unicorn/prefer-node-protocol:
  # # - off # ToDo: enable when import/no-unresolved properly supports this
  # unicorn/prevent-abbreviations:
  #   - error
  #   - checkProperties: true
  #     replacements:
  #       props:
  #         properties: false
  #     allowList:
  #       dest: true
  #       env: true
  #       i18n: true
  #       params: true
  #       src: true
  # jsx-a11y/anchor-is-valid:
  #   - error
  #   - components:
  #       - Link
  #     specialLink:
  #       - hrefLeft
  #       - hrefRight
  #     aspects:
  #       - invalidHref
  #       - preferButton
  # jsx-a11y/label-has-associated-control: error
  capitalized-comments: off
  line-comment-position: off
  no-inline-comments: off
  spaced-comment: off
  # multiline-comment-style: off
  # lines-around-comment: off
  # no-magic-numbers: off
  # sort-keys: off
  # sort-vars: off
  # sort-imports: off

  # # these rules don't match my code style/prettier config
  # max-len: off
  # function-call-argument-newline: off
  # indent: off
  no-ternary: off
  # multiline-ternary: off
  one-var: off
  # comma-dangle: off
  no-unused-vars:
    - error
    - argsIgnorePattern: '^_'
      varsIgnorePattern: '^_'
  no-console:
    - warn
    - allow:
        - warn
        - error
overrides:
  # Config for Typescript Linting
  - files:
      - src/**/*.ts
      - src/**/*.tsx
    parser: '@typescript-eslint/parser'
    parserOptions:
      project:
        - tsconfig.json
        - cypress/tsconfig.json
      tsconfigRootDir: '.'
    plugins:
      - react
      - '@typescript-eslint'
    # - import
    # - eslint-plugin-tsdoc
    # - jsx-a11y
    extends:
      # - plugin:import/typescript
      - plugin:@typescript-eslint/recommended
      # - plugin:@typescript-eslint/all
      - plugin:@typescript-eslint/recommended-requiring-type-checking
      - prettier
    #   settings:
    #     import/parsers:
    #       '@typescript-eslint/parser':
    #         - '.ts'
    #         - '.tsx'
    #     import/resolver:
    #       typescript: {}
    #       node:
    #         extensions:
    #           - '.js'
    #           - '.jsx'
    #           - '.ts'
    rules:
      '@typescript-eslint/no-namespace': [2, { 'allowDeclarations': true }]
      '@typescript-eslint/explicit-module-boundary-types': 'off'
      no-use-before-define: off
      '@typescript-eslint/no-use-before-define': 'error'
      '@typescript-eslint/no-var-requires': 'off'
      '@typescript-eslint/no-unused-vars':
        - error
        - argsIgnorePattern: '^_'
          varsIgnorePattern: '^_'
  #     tsdoc/syntax: warn
  # # Config for Cypress Linting
  - files:
      - cypress/**/*.js
      - '**/*.spec.js'
    plugins:
      - cypress
    extends:
      - plugin:cypress/recommended
    rules:
      no-console: off
      no-unused-expressions: off
      no-magic-numbers: off
      multiline-comment-style: off
      max-lines-per-function: off
      cypress/no-unnecessary-waiting: off
      # '@typescript-eslint/no-empty-function': 'off'
      # '@typescript-eslint/ban-ts-comment': 'off'
  # Config for jest Linting
  - files:
      - '**/*.test.[js|ts]'
    # extends:
    # - plugin:jest/all
    # - plugin:jest-dom/recommended
    env:
      jest: true
